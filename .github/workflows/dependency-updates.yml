# Dependency update automation workflow
name: Dependency Updates

on:
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:  # Allow manual triggering

jobs:
  dependency-check:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Check for dependency updates
      run: |
        mvn versions:display-dependency-updates > dependency-updates.txt
        mvn versions:display-plugin-updates > plugin-updates.txt
        
        echo "=== Dependency Updates Available ===" >> update-summary.txt
        grep -A 100 "The following dependencies in Dependencies have newer versions:" dependency-updates.txt >> update-summary.txt || true
        
        echo "=== Plugin Updates Available ===" >> update-summary.txt  
        grep -A 100 "The following plugin updates are available:" plugin-updates.txt >> update-summary.txt || true

    - name: Check for security vulnerabilities
      run: |
        echo "Checking for security vulnerabilities..."
        mvn org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=7 -DsuppressTestExecutionAuditing=true || true
        
        if [ -f target/dependency-check-report.html ]; then
          echo "Security report generated"
        fi

    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-reports
        path: |
          dependency-updates.txt
          plugin-updates.txt
          update-summary.txt
          target/dependency-check-report.html

    - name: Create issue for updates
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read the update summary
          let updateSummary = '';
          try {
            updateSummary = fs.readFileSync('update-summary.txt', 'utf8');
          } catch (error) {
            console.log('No update summary found');
            return;
          }
          
          // Only create an issue if there are updates available
          if (updateSummary.includes('newer versions') || updateSummary.includes('updates are available')) {
            const issueBody = `
            ## Dependency Update Report
            
            This is an automated report of available dependency updates.
            
            \`\`\`
            ${updateSummary}
            \`\`\`
            
            ### Next Steps
            - [ ] Review the updates for compatibility
            - [ ] Test with updated dependencies  
            - [ ] Update pom.xml with new versions
            - [ ] Run full test suite
            - [ ] Update documentation if needed
            
            Generated on: ${new Date().toISOString()}
            `;
            
            // Check if there's already an open issue for dependency updates
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'dependencies'
            });
            
            const existingIssue = issues.data.find(issue => 
              issue.title.includes('Dependency Updates Available')
            );
            
            if (existingIssue) {
              // Update existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `## Updated Dependency Report\n\n${issueBody}`
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Dependency Updates Available',
                body: issueBody,
                labels: ['dependencies', 'maintenance']
              });
            }
          }

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Run security audit
      run: |
        echo "Running security audit..."
        # Check for known vulnerabilities in dependencies
        mvn org.owasp:dependency-check-maven:check -DfailBuildOnAnyVulnerability=false

    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-audit-report
        path: target/dependency-check-report.html

    - name: Check for high severity vulnerabilities
      run: |
        if [ -f target/dependency-check-report.xml ]; then
          # Check if there are high or critical severity vulnerabilities
          HIGH_VULNS=$(grep -c 'severity.*HIGH\|severity.*CRITICAL' target/dependency-check-report.xml || true)
          if [ "$HIGH_VULNS" -gt 0 ]; then
            echo "Found $HIGH_VULNS high/critical severity vulnerabilities"
            echo "HIGH_SEVERITY_VULNS=$HIGH_VULNS" >> $GITHUB_ENV
          fi
        fi

    - name: Create security issue
      if: env.HIGH_SEVERITY_VULNS > 0
      uses: actions/github-script@v7
      with:
        script: |
          const issueBody = `
          ## ðŸš¨ Security Alert: High Severity Vulnerabilities Detected
          
          The automated security scan has detected **${{ env.HIGH_SEVERITY_VULNS }}** high or critical severity vulnerabilities in project dependencies.
          
          ### Action Required
          - [ ] Review the detailed security report in the artifacts
          - [ ] Update affected dependencies to secure versions
          - [ ] Test the plugin with updated dependencies
          - [ ] Verify all functionality still works
          
          ### Security Report
          Download the full security audit report from the workflow artifacts.
          
          **Priority:** High
          **Generated:** ${new Date().toISOString()}
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Security: High Severity Vulnerabilities Detected',
            body: issueBody,
            labels: ['security', 'high-priority', 'vulnerability']
          });
